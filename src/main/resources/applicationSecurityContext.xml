<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	<mvc:resources mapping="/resources/**" location="/resources/" />

    <http pattern="/"  security="none" />
    <http pattern="/default/**" security="none" />
    <http pattern="/home"  security="none" />
    <http pattern="/resources/**"  security="none" />
	<http pattern="/WEB-INF/views/**" security="none" />

	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="expressionHandler" />
	</global-method-security>

	<beans:bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="customPermissionEvaluator" />
	</beans:bean>
	  
	<beans:bean class="com.brs.security.CustomPermissionEvaluator" id="customPermissionEvaluator"/>

	<http auto-config="true" use-expressions="true" disable-url-rewriting="true" access-denied-page="/account/user/denied">
	
		<!-- START :: LIST OF UN SECURIED URLS -->
		<intercept-url pattern="/"  access="permitAll" />
		<intercept-url pattern="/default/**" access="permitAll" />
		<intercept-url pattern="/home"  access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/WEB-INF/views/**" access="permitAll" />
		
		<intercept-url pattern="/**/**" access="isAuthenticated()" />
		<form-login always-use-default-target="true" 
				login-page="/account/user/login?confirmId=Y" 
				authentication-success-handler-ref="brsSuccessHandler" 
				authentication-failure-handler-ref="brsFailureHandler"
				default-target-url="/account/user/loginSuccess" />
			
		<logout 
				delete-cookies="JSESSIONID, SPRING_SECURITY_REMEMBER_ME_COOKIE"
				invalidate-session="true" 
				logout-success-url="/account/user/login" />
		
		<remember-me key="brsRememberMeKey" token-validity-seconds="600"/>
	
		<expression-handler ref="customExpressionHandler"/>
	</http>
	
	<beans:bean id="brsSuccessHandler" class="com.brs.security.BrsUrlAuthenticationSuccessHandler">
	 	<beans:property name="defaultTargetUrl" value="/account/user/loginSuccess"/>
	 	<beans:property name="baseBrsAuthContext" value="/brs"/>
	</beans:bean>
	
	<beans:bean id="brsFailureHandler" class="com.brs.security.BrsUrlAuthenticationFailureHandler">
	 	<beans:property name="defaultFailureUrl" value="/account/user/loginfailed"/>
	</beans:bean>
	
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"
		 p:userPropertyToUse="uuid" />
	
	
	<beans:bean id="brsDaoAuthenticationProvider"
	    class="com.brs.security.BrsDaoAuthenticationProvider"
	    p:passwordEncoder-ref="passwordEncoder"
	    p:saltSource-ref="saltSource"
	    p:userDetailsService-ref="customUserDetailsService" />
    
	<authentication-manager>
	    <authentication-provider ref="brsDaoAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
    <beans:property name="basenames">  
        <beans:list>
            <beans:value>classpath:/i18n/Account_exceptions</beans:value>
        </beans:list>
    </beans:property>
	</beans:bean> 
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<beans:bean id="customUserDetailsService" class="com.brs.security.CustomUserDetailsService" />


</beans:beans>
